{"response":[{"id":"5ff03816cf59375234cca8d8","uuid":"91ff926a-9fad-40a6-a059-2c6e08f196d7","title":"Intro to HCI Lecture 4 – Cognition and Design","slug":"intro-to-hci-lecture-4-cognition-and-design","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/gates-700x291.jpg\",\"alt\":\"gates\",\"title\":\"\",\"width\":700,\"height\":291}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/Screenshot-2015-02-19-18.25.58-700x447.png\",\"alt\":\"Screenshot 2015-02-19 18.25.58\",\"title\":\"\",\"width\":700,\"height\":447}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/Screenshot-2015-02-19-18.26.24-700x315.png\",\"alt\":\"Screenshot 2015-02-19 18.26.24\",\"title\":\"\",\"width\":700,\"height\":315}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/Screenshot-2015-02-19-18.27.18-700x350.png\",\"alt\":\"Screenshot 2015-02-19 18.27.18\",\"title\":\"\",\"width\":700,\"height\":350}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/tetris_screenshot_2_656x369.jpg\",\"alt\":\"tetris_screenshot_2_656x369\",\"title\":\"\",\"width\":656,\"height\":369}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/tubemap-2012-12-700x469.png\",\"alt\":\"tubemap-2012-12\",\"title\":\"\",\"width\":700,\"height\":469}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/edtuftemap.png\",\"alt\":\"edtuftemap\",\"title\":\"\",\"width\":575,\"height\":373}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/zzp-404_1z-700x586.jpg\",\"alt\":\"zzp-404_1z\",\"title\":\"\",\"width\":700,\"height\":586}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/tictactoeblank-700x562.png\",\"alt\":\"tictactoeblank\",\"title\":\"\",\"width\":700,\"height\":562}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2021/01/Screenshot-2015-02-19-18.28.031-700x562.png\",\"alt\":\"Screenshot 2015-02-19 18.28.03\",\"title\":\"\",\"width\":700,\"height\":562}]],\"markups\":[[\"a\",[\"href\",\"http://d.ucsd.edu/srk/\"]],[\"a\",[\"href\",\"http://www.amazon.com/gp/product/0201626950/ref=as_li_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0201626950&linkCode=as2&tag=diplateevo-20&linkId=ZBPMKU5JIVVS3UCX\"]],[\"a\",[\"href\",\"http://www.amazon.com/gp/product/0262581469/ref=as_li_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0262581469&linkCode=as2&tag=diplateevo-20&linkId=NSLLWQS73IQ3YOJ2\"]],[\"a\",[\"href\",\"http://www.amazon.com/gp/product/0262691914/ref=as_li_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0262691914&linkCode=as2&tag=diplateevo-20&linkId=36DJXHVQIP7ATSLA\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"These are my notes in essay form from the Intro to Human Computer Interaction course taught by \"],[0,[0],1,\"Scott Klemmer\"],[0,[],0,\" at the University of California, San Diego. All credit for content goes to Scott, any errors are my own.\"]]],[1,\"p\",[[0,[],0,\"When it comes to user interface design, one consideration to be made is understanding the mental model that a user may have when they see different elements of the interface.\"]]],[1,\"h2\",[[0,[],0,\"Mental Models\"]]],[1,\"p\",[[0,[],0,\"Stanford’s computer science building has two adjacent doors, only one of which opens from the outside. But despite the fact that only one door opens, both doors have identical handles. This leads users to think that they can enter from either door, and when they try to enter from the door on the right, they find that it does not open. A simple solution to this would be to remove the exterior handle from the door on the right, making it easy for people to understand that only one door opens.\"]]],[10,0],[1,\"p\",[[0,[],0,\"Another example from Don Norman in The Design of Everyday Things is the mental model of refrigerator design. Let’s say a refrigerator has two dials, one of which is labelled with letters A through E, and the other is labelled with numbers 3 through 7.\"]]],[1,\"p\",[[0,[],0,\"Intuitively, you would expect one dial to control the cooling unit of the freezer and the other dial to control the cooling unit of the refrigerator. However, this refrigerator only has one cooling unit and the dials controls a splitter that determines the proportion of cooling that goes into the freezer or the refrigerator. Thus, in order to make the refrigerator colder while maintaining the temperature of the freezer, you have to move both dials. A lot of users misunderstand the function of these two dials and get it wrong. This is an example of a poor user interface because the user’s mental model is different than the actual model.\"]]],[1,\"p\",[[0,[],0,\"One pitfall of being a designer is that you’ve often spent so much time under the hood that you expect users to have the same understanding of the interface as you do. This is why it is helpful to have people who are not designers in front of the user interface as soon as possible. Having people use the interface helps you discover the differences between your mental model and theirs. Having a congruent mental model allows users to avoid errors and simplifies and prevents the user from getting frustrated.\"]]],[1,\"p\",[[0,[],0,\"To explain how mental models are formed, there are a few considerations. The first is that new interfaces are often learned by thinking in terms of an old interface they may be more familiar with. You can be very successful by realizing what people are familiar with and leverage that to help them learn a new interface. For example, if you explain a word processor like a typewriter, people who have experience with typewriters can easily learn how to work a word processor, and transfer their beliefs and skills over to the word processor.\"]]],[1,\"p\",[[0,[],0,\"We all have models and beliefs about everything, ranging from our behavior, others, objects, and software. This is not to say that our mental models are organized, but often the opposite. Most of our models are incomplete, inconsistent, change over time, and often rife with superstition. This leads us to the concept of the execution gap, which is the difference the gap between what a user perceives that a tool should accomplish and how they actually do that.\"]]],[1,\"p\",[[0,[],0,\"Thus, the best user interfaces are ones that allow the user to clearly achieve the tasks that they intend to do. In order to create user interfaces that are easy to use in accordance with a user’s mental models, there are a few points to consider.\"]]],[3,\"ul\",[[[0,[],0,\"Visibility is about making actions visible. If the user performs an action on an interface, the interface should provide some sort of visible feedback letting the user know that an action has been performed.\"]],[[0,[],0,\"Feedback is about the process that a computer does, and providing clear results for the task at hand.\"]],[[0,[],0,\"Consistency is about creating a uniform experience for the user to engage with so that they can build a new mental model around how your interface actually works.\"]],[[0,[],0,\"Non-destructive interfaces are easy to undo in the case that a user makes a mistake.\"]],[[0,[],0,\"Reliable interfaces accomplish the task reliably, avoiding errors as much as possible.\"]]]],[1,\"p\",[[0,[],0,\"An excellent example of the points mentioned can be seen when comparing graphical user interfaces (GUIs) with command line interfaces. For most of these categories, having a GUI is far superior to using the command line. In a GUI, moving a file from one folder to another can be achieved with a drag and drop, which allows the user to visibly and directly interact with the filesystem in a non-destructive, consistent way. The only advantage that a command line interface has over a GUI is reliability.\"]]],[1,\"p\",[[0,[],0,\"Although using existing mental models to explain new interfaces can help users get accustomed to the new interface faster, the problem is that at some point the metaphor needs to break down in order to allow the new technology to be truly effective. Since new technologies usually introduce new and better ways of accomplishing a task, sometimes old mental models will never translate completely, and sometimes they may not translate at all.\"]]],[1,\"p\",[[0,[],0,\"Thus, your job as a designer is to minimize the difference between the new technology and the old as much as possible.\"]]],[1,\"blockquote\",[[0,[],0,\"“If technology is to provide an advantage, the correspondence to the real world must break down at some point.” – Jonathan Grudin\"]]],[1,\"h2\",[[0,[],0,\"Two Types of Errors\"]]],[1,\"p\",[[0,[],0,\"Another consideration when building products is recognizing different kinds of errors that are based on the user’s mental models, namely the difference between a slip and a mistake.\"]]],[1,\"p\",[[0,[],0,\"The first category of error is a slip. A slip is when a user has the correct mental model of how a system works, but accidentally made the wrong action. For example, if a user accidentally clicks the wrong button because of a motor error, that is known as a slip.\"]]],[1,\"p\",[[0,[],0,\"A mistake, however, is when the user does exactly what they intend to do, but they have the wrong mental model of how the system works. For example, if a user takes a freeway exit thinking that it will take them where they want to go, the user made a mistake due to an inaccurate mental model of where an exit would lead them.\"]]],[1,\"p\",[[0,[],0,\"In your design, you will correct and prevent these two errors differently. Slips are minimized by improving the ergonomics or the visual design of your interface by spreading things out and making things bigger, while mistakes are minimized by providing more information and feedback, making it clear as to what the software is going to do.\"]]],[1,\"p\",[[0,[],0,\"One example is a presidential voting ballot in the 2000 elections. Due to a poor layout of the ballot, it is hypothesized that many people made the mistake of voting for Pat Buchanan. Pat Buchanan received 0.85% of the votes from people who used this ballot, but only 0.2% of the votes from people who voted absentee or used a different style of ballot.\"]]],[10,1],[1,\"p\",[[0,[],0,\"These erroneous votes are the result of a mistake because voters performed the manual task of punching the second hole, but had an inaccurate perception of what the second hole meant. A better user interface design could have avoided these problems.\"]]],[1,\"p\",[[0,[],0,\"One potential solution for a unified nationwide voting system would be to use an electronic voting system. An electronic voting system has a lot of appeals, such as a easy way to internationalize to a large variety of languages, providing pictures of candidates, and using a touchscreen so that users can directly manipulate what is on the screen. However, the major problem with digital voting systems is ensuring that the machine recorded the vote that you made. One solution to this user interface is for the machine to print out a receipt of your vote that is placed into a bin to be physically counted later to double check the voting results.\"]]],[1,\"p\",[[0,[],0,\"An example of a good interface are the miniature controls on the seats of some cars. The interface to manipulate different parts of the seat is a miniature seat itself. This reduces the potential for confusion in users.\"]]],[10,2],[1,\"p\",[[0,[],0,\"One example of maximizing the benefits of new technology while minimizing the difference between old technologies is the system for DJs called final scratch. In Final Scratch, the DJ uses two turntables that send a code to the computer instead of playing music directly. The computer then is able to convert the code into the song that is being played and play that from the speakers. This allows the DJ to play anything, even things that are not on vinyl. It also allows all the benefits of digital music.\"]]],[10,3],[1,\"h2\",[[0,[],0,\"Distributed Cognition\"]]],[1,\"p\",[[0,[],0,\"There are many ways interfaces can help people think more fluidly. Distributed cognition is the idea that knowledge lies not only in the individual, but also in the individual’s social and physical environment. When interfaces help people to distribute cognition, it has major effects on the way that users interact with the software.\"]]],[1,\"h3\",[[0,[],0,\"Distributed Cognition Encourages Experimentation\"]]],[1,\"p\",[[0,[],0,\"The first example of an interface distributing cognition comes from the game of Tetris. In this game, players move and rotate falling blocks in order to create rows that destruct and earn the player points. Tetris provides a visual instantiation that allows users to visually see what is happening.\"]]],[10,4],[1,\"p\",[[0,[],0,\"When observing the way that people play Tetris, it was discovered that people rotate and move pieces around more than they need to in order to test different possibilities of where a block may be placed. This is an example of distributing cognition, because it requires less effort and is therefore “cheaper” to experiment by actually moving and rotating the blocks.\"]]],[1,\"h3\",[[0,[],0,\"Distributed Cognition Shows Only Differences that Matter\"]]],[1,\"p\",[[0,[],0,\"Another example of visual representation is the London underground subway map. About a century ago, a new style of map was introduced that visualized subway stops in a different way.\"]]],[10,5],[1,\"p\",[[0,[],0,\"Instead of staying true to the underlying topology of the geography of London, this map was the first to lay things out in a much simpler way using vertical, horizontal, and diagonal lines to represent different routes, stripping out the details of topology. This map was beneficial because most users didn’t care too much about the actual distance between routes, but merely needed a way to see the order of the stops.\"]]],[1,\"p\",[[0,[],0,\"Another advantage of the London subway map was that in downtown, most of the subway stops are closer together, while stops in the suburbs are fewer and further in between. Instead of having the routes to the suburbs occupy 90% of the map, the map spaces out the stops in downtown in a way for people to easily see all the stops.\"]]],[1,\"p\",[[0,[],0,\"However, this kind of representation may not appropriate for all use cases. By simplifying and improving readability on all the stops by neglecting topological distance, it can be deceiving to someone trying to figure out the distance between two places, or anyone looking at the map with the intent of figuring out anything related to distance.\"]]],[1,\"p\",[[0,[],0,\"Therefore, the way that visual design is approached should be application specific. A good representation is tight to the task a user wants to perform.\"]]],[1,\"h3\",[[0,[],0,\"Distributed Cognition Converts Slow Calculation into Fast Perception\"]]],[1,\"p\",[[0,[],0,\"Colors can also be used as a representation to distribute cognition. In a map showing the elevation of land and depth of the ocean around Japan, one design approach is using hue as a representation for elevation. However, using hue is hard to understand because it is not intuitive what different colors represent in terms of elevation. A better approach to using color in this situation would be to use luminosity.\"]]],[10,6],[1,\"p\",[[0,[],0,\"In the redesign of the map, Edward Tufte used blue to represent anything underneath the surface of the water, while using a brown tone to represent land above the water. Using luminosity rather than hue allows the reader to much better visualize how deep a certain part of the ocean is or how high a certain point on land is.\"]]],[1,\"h3\",[[0,[],0,\"Distributed Cognition Supports Chunking\"]]],[1,\"p\",[[0,[],0,\"Both user interface and game design is concerned with how easy or hard it is for a user to perform a task. The difference is that interface designers usually try to make it easy, while game designers usually try to make it the right kind of hard. This leads to the concept of chunking, which allows users to execute a common group of actions together in order to simplify the process.\"]]],[1,\"p\",[[0,[],0,\"For example, moving a block of text within a document is a common practice that often takes three steps of first cutting the text, moving the cursor, and then pasting the text. By being able to select and drag a selection of text, the user interface has effectively chunked the three actions into one simple motion, making it easier for the user to perform the task.\"]]],[1,\"h3\",[[0,[],0,\"Distributing Cognition Increases Efficiency\"]]],[1,\"p\",[[0,[],0,\"Often, designers must decide between representing information textually or representing information visually. Although there is no simple answer to when one should be used over the other, one instance in which information should be displayed visually is when you can convert slow reasoning task into fast perception tasks through a visual representation. For example, using a graph to spot trends is much easier than using a table of numbers that require a lot of reasoning to understand.\"]]],[1,\"p\",[[0,[],0,\"We’ve all heard the saying that a picture is worth a thousand words. This statement implies some kind of ratio at which one is interchangeable with the other. But just because two representations are informationally equivalent doesn’t mean that they are also computationally equivalent. In other words, just because two representations have the same information present doesn’t mean that it takes the same amount of effort to extract the information.\"]]],[1,\"p\",[[0,[],0,\"This is one area in which graphical user interfaces have an advantage over command line interfaces. Graphical user interfaces allow users to easily perform tasks visually, distributing the cognition required of the user.\"]]],[1,\"p\",[[0,[],0,\"Another example of a product that increases efficiency for users is the oxo measuring cup. By enabling the user to see how much liquid is in the container from above, users no longer have to bend over to the counter level to see how much liquid is in the measuring cup.\"]]],[10,7],[1,\"blockquote\",[[0,[],0,\"“Solving a problem simply means representing it so as to make the solution transparent” – Herbert Simon\"]]],[1,\"p\",[[0,[],0,\"Consider a two player game which has the following rules (try playing it with someone):\"]]],[3,\"ul\",[[[0,[],0,\"Each player takes turns picking numbers between 1 and 9, inclusive.\"]],[[0,[],0,\"Once a number is picked, it cannot be picked again by either player.\"]],[[0,[],0,\"The first player that picks a combination of 3 numbers that adds to 15 is the winner.\"]]]],[1,\"p\",[[0,[],0,\"In this game, players often have to think extremely hard to keep track of the numbers they have chosen, the numbers their opponent has chosen, and which numbers they want to choose. In fact, players often end up making mistakes and choosing numbers that have already been chosen, or numbers that they they later realize they didn’t want.\"]]],[1,\"p\",[[0,[],0,\"Let’s compare that game to a game that everyone is familiar with, namely tic tac toe. Tic tac toe is represented in a three by three grid, in which players take turns to pick squares that will create either a row, column, or diagonal.\"]]],[10,8],[1,\"p\",[[0,[],0,\"If you really think about it, you’ll realize that the two games are isomorphically identical. In other words, you can assign a number to each square in such a way that every row, diagonal, and column adds up to 15.\"]]],[10,9],[1,\"p\",[[0,[],0,\"These two games are the perfect example of how effective a power user interface can be. By simply representing the game in a different way, we’ve made it much easier for people to play, reducing the amount of cognitive effort required to play the game by reducing the amount of working memory necessary.\"]]],[1,\"h2\",[[0,[],0,\"Further Resources\"]]],[3,\"ul\",[[[0,[1],1,\"Things that Make Us Smart – Don Norman\"]],[[0,[2],1,\"Cognition in the Wild – Ed Hutchins\"]],[[0,[3],1,\"Sciences of the Artificial – Herbert Simon\"]]]]]}","comment_id":"5ff03816cf59375234cca8d8","feature_image":"http://localhost:2369/content/images/2021/01/2015-01-31-03.32.46-1.jpg","featured":false,"status":"published","visibility":"public","created_at":"2021-01-02T09:08:38.000Z","updated_at":"2021-01-03T15:27:00.000Z","published_at":"2015-02-24T00:00:00.000Z","custom_excerpt":"These are my notes in essay form from the Intro to Human Computer Interaction course taught by Scott Klemmer at the University of California, San Diego.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"email_recipient_filter":"none","tags":[],"authors":[{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"}],"primary_author":{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"},"primary_tag":null,"url":"http://localhost:2369/intro-to-hci-lecture-4-cognition-and-design/","excerpt":"These are my notes in essay form from the Intro to Human Computer Interaction course taught by Scott Klemmer at the University of California, San Diego.","send_email_when_published":false,"email":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null},{"id":"5f7835122493c2c88d8d40e9","uuid":"e2122844-8919-4907-b21e-2d74a23ea16b","title":"Intro to HCI Lecture 3 – Heuristic Evaluation","slug":"intro-to-hci-lecture-3-heuristic-evaluation","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/Screenshot-2015-02-13-02.31.53-700x184.png\",\"alt\":\"Screenshot 2015-02-13 02.31.53\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":700,\"height\":184}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/Screenshot-2015-02-13-02.32.52-700x267.png\",\"alt\":\"Screenshot 2015-02-13 02.32.52\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":700,\"height\":267}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/Screenshot-2015-02-13-02.33.14-700x494.png\",\"alt\":\"Screenshot 2015-02-13 02.33.14\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":700,\"height\":494}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/Screenshot-2015-02-13-02.34.56-700x261.png\",\"alt\":\"Screenshot 2015-02-13 02.34.56\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":700,\"height\":261}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/Screenshot-2015-02-13-02.35.11-700x371.png\",\"alt\":\"Screenshot 2015-02-13 02.35.11\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":700,\"height\":371}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/Screenshot-2015-02-13-02.35.55-700x416.png\",\"alt\":\"Screenshot 2015-02-13 02.35.55\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":700,\"height\":416}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/Screenshot-2015-02-13-02.36.17-700x400.png\",\"alt\":\"Screenshot 2015-02-13 02.36.17\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":700,\"height\":400}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/Screenshot-2015-02-13-02.42.49-700x235.png\",\"alt\":\"Screenshot 2015-02-13 02.42.49\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":700,\"height\":235}]],\"markups\":[[\"a\",[\"href\",\"http://d.ucsd.edu/srk/\"]],[\"a\",[\"href\",\"http://www.nngroup.com/articles/ten-usability-heuristics/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"These are my notes in essay form from the Intro to Human Computer Interaction course taught by \"],[0,[0],1,\"Scott Klemmer\"],[0,[],0,\" at the University of California, San Diego. All credit for content goes to Scott, any errors are my own.\"]]],[1,\"p\",[[0,[],0,\"After you’ve made your prototypes, the next step is learning how to properly get feedback from people. There are many different ways to get feedback, but simply asking for feedback is often hard to organize and understand. Users who simply tell you that they like or dislike something is not an interesting conversation.\"]]],[1,\"p\",[[0,[],0,\"You can empirically access your product with real users, use formal methods and formulas to calculate measures, or you can use a critiquing framework such as heuristic evaluation. With heuristic evaluation, you begin your review with a clear goal. Developed by Jakob Nielsen, heuristic evaluation allows you to easily find usability problems in design.\"]]],[1,\"h2\",[[0,[],0,\"Before a Heuristic Evaluation\"]]],[1,\"p\",[[0,[],0,\"The first question to ask when it comes to getting design critique is figuring out when to get critique. You can get feedback at any point in the design process, but there are a couple points that may be particularly helpful.\"]]],[1,\"p\",[[0,[],0,\"The first point to get design critique is before user testing. By getting critique and fixing small usability issues, users who test your product are able to better focus on the big issues. The second point is before a redesign. To avoid throwing out the baby with the bathwater, a proper critique helps you learn what works and what needs to be improved. Thirdly, critiques should also be performed when you know there are problems, but you need evidence. And finally, smooth out the rough edges before a release by performing a final critique.\"]]],[1,\"p\",[[0,[],0,\"Next, in order to perform a heuristic evaluation, you need to find evaluators to evaluate your user interface according to usability principles, known as heuristics. To diversify feedback, it helps to have multiple heuristic evaluators work independently and then communicate afterwards to aggregate findings. Having multiple evaluators is helpful because no single evaluator finds everything, and some evaluators find more than others.\"]]],[1,\"p\",[[0,[],0,\"Heuristic evaluation works well on working user interfaces as well as wireframes, making it highly compatible with the principles discussed in rapid prototyping such as paper prototypes. It works with designs of any fidelity.\"]]],[1,\"p\",[[0,[],0,\"Additionally, from a cost-analysis standpoint, heuristic evaluations are also extremely cost-effective. One analysis of heuristic evaluation found that a company benefitted approximately $500,000 from results generated in heuristic evaluation when applied to increase productivity, while only costing the company $10,500.\"]]],[1,\"p\",[[0,[],0,\"Compared to user testing, heuristic evaluation is much faster and affordable, and are often able to find the most severe problems easily. Another benefit is that because of the nature of the heuristics the results come pre-interpreted, making it easy to know exactly what to redesign. However, user testing by definition is always more accurate than heuristic evaluations, because you are testing the product in the exact scenarios that it is to be used. Thus, heuristic evaluations can often generate false positives, leading you to consider some aspects as problems when they may not necessarily be a problem.\"]]],[1,\"p\",[[0,[],0,\"Thus, when it comes to testing, it often is valuable to alternate testing methods in order to maximize for cost, effectiveness, and time.\"]]],[1,\"h2\",[[0,[],0,\"Conducting a Heuristic Evaluation\"]]],[1,\"p\",[[0,[],0,\"To conduct a heuristic evaluation process, begin by giving your evaluators any needed domain knowledge and information on the scenario. You can do this by sharing your storyboards, video prototypes, or any other information that may give the evaluators the necessary background information for you interface.\"]]],[1,\"p\",[[0,[],0,\"Each evaluator should pass through the interface flow at least twice. The first pass allows the evaluator to get a good feel for the flow and scope of the system, while the second pass allows the evaluator to focus in on specific elements. While they step through the flow, each evaluator should consult the list of heuristics (explored in detail further down in this post), and make notes on anything that they notice.\"]]],[1,\"p\",[[0,[],0,\"The comments should thoroughly explain the problem with reference to a specific heuristic. Comments can be specific to the wording of a certain label in the interface, or can be general to address to flow of the user interface, as long as the design team is able to understand what the problem is. Comments can even be about aspects that are missing in the user interface, which is often the case especially in paper prototypes.\"]]],[1,\"p\",[[0,[],0,\"For each comment that an evaluator makes, have them determine how severe each identified problem is. This helps give the design team feedback on which problems they may want to prioritize. For example, a problem identified in one page in the user interface may not be as severe as a problem that affects every single page of the interface.\"]]],[1,\"p\",[[0,[],0,\"When determining severity, the frequency, impact, and persistence of the problem should be factored in. According to Nielsen’s framework of heuristic evaluation, severity ratings are between 0 and 4, with 0 being that it is not a usability problem and 4 being a usability catastrophe.\"]]],[1,\"p\",[[0,[],0,\"Each violation should be listed separately in order to better organize the problems identified. Listing each problem separately minimizes the risk of repeating problematic aspects, and makes each problem clearer and easier to understand.\"]]],[1,\"p\",[[0,[],0,\"Finally, have the evaluators share their findings and aggregate all the problems and severities that they have found in the interface. The design team can then take the feedback they received from the evaluators and decide what they would like to do with the feedback.\"]]],[1,\"p\",[[0,[],0,\"The debrief is a great time to clarify the feedback, and brainstorm ways to fix the problems as well as develop ways to implement new features with all the stakeholders in one place.\"]]],[1,\"h2\",[[0,[],0,\"The Ten Heuristics\"]]],[1,\"p\",[[0,[],0,\"As mentioned above, Nielsen has \"],[0,[1],1,\"a set of ten heuristics \"],[0,[],0,\"that can be used as guidelines to evaluating user interfaces. These guidelines are not all encompassing, which means the evaluator can make comments or suggestions that do not necessarily belong with one specific heuristic.\"]]],[1,\"h3\",[[0,[],0,\"Show system status\"]]],[1,\"p\",[[0,[],0,\"The system should always keep users informed about what is going on, through appropriate feedback within reasonable time. This helps the user know what the progress of the current task is, and where he or she is in the larger system flow.\"]]],[1,\"p\",[[0,[],0,\"In situations where the user is waiting on the system, the user interface should provide some sort of status indicator. If the task that the system performs generally takes less than one second, the system can simply show the outcome. If the task takes approximately a couple of seconds, then there should be an indicator to let the user know that progress is underway. And if the tasks takes over a couple of seconds, it is a good idea to have a fractional status indicator showing the current status and time.\"]]],[10,0],[1,\"p\",[[0,[],0,\"Another example of system status is space. In the following example, gmail provides an indicator letting the user know that they are out of space.\"]]],[1,\"p\",[[0,[],0,\"The third example of system status is change. The dialog boxes that appear when forgetting to saving files will often warn you about pending losses to the information at hand.\"]]],[10,1],[1,\"p\",[[0,[],0,\"The fourth example is action. For instance, a stoplight prompts a specific type of action, whether it be recognizing that a driver can cross a street or a driver should not cross a street. The stoplight is also an example of a good interface because it also provides a redundant method of indication, putting red at the top and green at the bottom. This redundancy allows stoplights to serve a wider base of users.\"]]],[1,\"p\",[[0,[],0,\"The fifth example is showing information about next steps. Especially in an online world, it is good practice to let the user know what is happening next.\"]]],[1,\"p\",[[0,[],0,\"And finally, after finishing whatever task is at hand, it is good to indicate that a process has completed.\"]]],[1,\"h3\",[[0,[],0,\"Familiar metaphors and language\"]]],[1,\"p\",[[0,[],0,\"The system should speak the users’ language, with words, phrases and concepts familiar to the user, rather than system-oriented terms. Follow real-world conventions, making information appear in a natural and logical order.\"]]],[1,\"p\",[[0,[],0,\"One example of an effective metaphor is found in the print dialog box, because it shows which parts of the page are going to be cropped and which parts are going to be printed in a very clear way. In general, one of the advantages of the graphical user interface is that it leverages a lot of real world metaphors such as the desktop, files, trash, folders, etc.\"]]],[10,2],[1,\"p\",[[0,[],0,\"Choices are another area in which it is helpful to use familiar language. Even if a dialog box uses language that may be a bit more technical, make the choices clear for people who may not be as technically aware.\"]]],[10,3],[1,\"h3\",[[0,[],0,\"User control and freedom\"]]],[1,\"p\",[[0,[],0,\"Users often choose system functions by mistake and will need a clearly marked “emergency exit” to leave the unwanted state without having to go through an extended dialogue. Support undo and redo.\"]]],[1,\"p\",[[0,[],0,\"If the task being done is a task that is only done once, a constrained wizard may be helpful to guide the user through the process. However, the user interface should always provide the user with a way to exit out of a flow or go back. Allowing the user to explore gives them the freedom to interact with the interface the way they want.\"]]],[1,\"h3\",[[0,[],0,\"Consistency and standards\"]]],[1,\"p\",[[0,[],0,\"Users should not have to wonder whether different words, situations, or actions mean the same thing. Follow platform conventions.\"]]],[1,\"p\",[[0,[],0,\"Just like familiar language should be used in your interface, consistent language should be used as well. Despite the fact that a design team may be organized in a certain way, the user may not see their experience in the same way. This difference between designers and users can be confusing for users navigating your interface.\"]]],[1,\"p\",[[0,[],0,\"One solution to this problem is to train your users and design team to use the same language when referring to the product, making it easier to understand from both perspectives. Being very specific about what interface choices do can also help provide a more standard experience across all users.\"]]],[1,\"h3\",[[0,[],0,\"Error prevention\"]]],[1,\"p\",[[0,[],0,\"Even better than good error messages is a careful design which prevents a problem from occurring in the first place. Either eliminate error-prone conditions or check for them and present users with a confirmation option before they commit to the action.\"]]],[1,\"p\",[[0,[],0,\"The first kind of error to prevent people from making is data loss. For example, if a file is about to be overwritten, a user may not recognize what is in a file simply by looking at the filename, which means the user could run the risk of unintentionally overwriting data.\"]]],[10,4],[1,\"p\",[[0,[],0,\"You can also prevent errors by preventing duplicates and clutter. Warning users that files may potentially be a duplicate is a great way of preventing users from accidentally doing something twice. Removing clutter and confusing flow also helps the users accomplish what the intended to do.\"]]],[1,\"p\",[[0,[],0,\"One advantage of graphical user interfaces is that they can use a visual structure to limit the errors that a user may make. For example, anything that you can type into a graphical search form can be used as the term to search with, while searching via the terminal must be done with the specific command syntax.\"]]],[1,\"p\",[[0,[],0,\"Avoiding unnecessary constraints helps reduce the number of errors that users encounter. In many situations, the user may perform a task only to find that some constraint on their task caused an error. Removing unnecessary constraints helps the user through the application flow much more smoothly.\"]]],[1,\"h3\",[[0,[],0,\"Recognition rather than recall\"]]],[1,\"p\",[[0,[],0,\"Minimize the user’s memory load by making objects, actions, and options visible. The user should not have to remember information from one part of the dialogue to another. Instructions for use of the system should be visible or easily retrievable whenever appropriate.\"]]],[1,\"p\",[[0,[],0,\"Interfaces should avoid use of cryptic codes, conventions, or other knowledge that the user may need to remember when interacting with the interface. Interfaces should be as easy to understand as possible. Any time you notice a post-it note used to explain or remind a user of something, that is usually a problem caused by users needing to remember some key piece of information in order to perform a task.\"]]],[1,\"p\",[[0,[],0,\"Recognition is also about avoiding extra hurdles that a user may have to go through in order to accomplish their task. Sometimes this means initializing the interface with reasonable defaults to make a task faster for your user.\"]]],[1,\"p\",[[0,[],0,\"In addition to initializing with reasonable defaults, it is also valuable to provide previews. Offering previews helps users to recognize whether or not the choice they are making is the one that they want rather than relying on a description or previous knowledge.\"]]],[10,5],[1,\"h3\",[[0,[],0,\"Flexibility and efficiency\"]]],[1,\"p\",[[0,[],0,\"Accelerators, unseen by the novice user, may often speed up the interaction for the expert user such that the system can cater to both inexperienced and experienced users. Allow users to tailor frequent actions.\"]]],[1,\"p\",[[0,[],0,\"The easiest way to increase efficiency is to provide keyboard shortcuts for experienced users to navigate your application better.\"]]],[1,\"p\",[[0,[],0,\"Another example of increasing flexibility is being able to look under the hood at the HTML of a web page. This is not necessarily something that everyone will want to do, but it offers experts with the ability to see how a web page is built.\"]]],[1,\"p\",[[0,[],0,\"Flexible interfaces can also display ambient information that may be relevant to the interface at hand, such as showing the weather forecast on a calendar application. Recommendations can also serve as a flexible interface element that can help the user be more efficient at the task they are trying to accomplish. However, if you use recommendation, remember to keep it relevant so that it’s not distracting to the user.\"]]],[10,6],[1,\"p\",[[0,[],0,\"Even though flexibility is important, it is also important to not go overboard with choices to avoid confusing the user and making it difficult to find what he or she is trying to do.\"]]],[1,\"h3\",[[0,[],0,\"Aesthetic and minimalist design\"]]],[1,\"p\",[[0,[],0,\"Dialogues should not contain information which is irrelevant or rarely needed. Every extra unit of information in a dialogue competes with the relevant units of information and diminishes their relative visibility.\"]]],[1,\"p\",[[0,[],0,\"One of the characteristics of designing for the web is that the user can only see part of the web page at a time, leading to the distinction between above the fold (initially visible content) and below the fold (content that is accessed by scrolling). It is important to make the core components of your software visible as much as possible, keeping it above the fold. Additionally, it helps to lay out forms and other interfaces in a simple, intuitive way to simplify the process and save space.\"]]],[1,\"p\",[[0,[],0,\"When using colors, use them in a way that the colors mean something. Avoid inundating your users with colors that distract from the flow of the interface.\"]]],[1,\"h3\",[[0,[],0,\"Recognize, diagnose, and recover from errors\"]]],[1,\"p\",[[0,[],0,\"Error messages should be expressed in plain language (no codes), precisely indicate the problem, and constructively suggest a solution.\"]]],[1,\"p\",[[0,[],0,\"The first step in sending an error is to make the problem clear. An error that does not provide a clear explanation of the problem often leaves users confused as to what their next steps should be.\"]]],[1,\"p\",[[0,[],0,\"The next step is providing a solution to the problem. Simply notifying the user of a problem may not be as helpful as recommending ways to fix the problem. Providing a way forward helps the user to continue the task at hand without disrupting the flow too much.\"]]],[10,7],[1,\"p\",[[0,[],0,\"Another consideration when recovering from errors is to propose an alternative. Especially in the world of online searches, it is helpful to provide alternatives in the case that a search returns no results.\"]]],[1,\"h3\",[[0,[],0,\"Help and documentation\"]]],[1,\"p\",[[0,[],0,\"Even though it is better if the system can be used without documentation, it may be necessary to provide help and documentation. Any such information should be easy to search, focused on the user’s task, list concrete steps to be carried out, and not be too large.\"]]],[1,\"p\",[[0,[],0,\"It can be assumed that help and documentation is someone else’s problem and not a part of the interface, but with the growth of online applications, help is becoming more common.\"]]],[1,\"p\",[[0,[],0,\"One example of this is the learning process for learning new programming languages. Most languages have their documentation online, which serves as a guide for programmers to receive help learning.\"]]],[1,\"p\",[[0,[],0,\"Another example is pointing out new features in the application when they are released, helping the user recognize how a new feature might be beneficial to them.\"]]]]}","comment_id":"5f7835122493c2c88d8d40e9","feature_image":"http://localhost:2369/content/images/2020/10/2015-01-31-03.32.46-1-2.jpg","featured":false,"status":"published","visibility":"public","created_at":"2020-10-03T08:23:46.000Z","updated_at":"2020-10-03T08:31:35.000Z","published_at":"2015-02-17T00:00:00.000Z","custom_excerpt":"These are my notes in essay form from the Intro to Human Computer Interaction course taught by Scott Klemmer at the University of California, San Diego.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"email_recipient_filter":"none","tags":[],"authors":[{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"}],"primary_author":{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"},"primary_tag":null,"url":"http://localhost:2369/intro-to-hci-lecture-3-heuristic-evaluation/","excerpt":"These are my notes in essay form from the Intro to Human Computer Interaction course taught by Scott Klemmer at the University of California, San Diego.","send_email_when_published":false,"email":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null},{"id":"5f782e892493c2c88d8d40d6","uuid":"748bf9ca-1086-4308-b571-fcce079a3a6b","title":"Intro to HCI Lecture 2 – Prototyping","slug":"intro-to-hci-lecture-2-prototyping","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/9dots.svg_.png\",\"alt\":\"9dots.svg\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":320,\"height\":320}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/Ninedots.svg_.png\",\"alt\":\"Ninedots.svg\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":320,\"height\":320}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/candle-problem-heuristic_383.png\",\"alt\":\"candle-problem-heuristic_383\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":321,\"height\":324}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/candle-problem-3.png\",\"alt\":\"candle-problem-3\",\"title\":\"\",\"cardWidth\":\"full\",\"width\":303,\"height\":293}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/4174319172_61e5aae5f3_o.png\",\"alt\":\"4174319172_61e5aae5f3_o\",\"title\":\"\",\"caption\":\"photocredit: <a href=\\\"https://www.flickr.com/photos/doos/4174319172/\\\">Rob Enslin</a>\",\"width\":1130,\"height\":1505}]],\"markups\":[[\"a\",[\"href\",\"http://d.ucsd.edu/srk/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"These are my notes in essay form from the Intro to Human Computer Interaction course taught by \"],[0,[0],1,\"Scott Klemmer\"],[0,[],0,\" at the University of California, San Diego. All credit for content goes to Scott, any errors are my own.\"]]],[1,\"p\",[[0,[],0,\"After you’ve done the interviews and generated personas, the next step is to begin developing prototype solutions for the problem you are trying to solve. As a note to the development process, the fidelity of your work will increase as you get further along in the development process. Be careful to choose the tools that are most appropriate for the stage you are developing to avoid wasting time.\"]]],[1,\"p\",[[0,[],0,\"Based upon your needfinding, you should have been able to identify a couple key problems that your users are having, which should allow you to generate a point of view on the problem at hand.\"]]],[1,\"p\",[[0,[],0,\"For example, a point of view may be “waiting in line is intrinsic, but the boredom is not”. This would lead to design solutions like showing news or playing games while waiting in line. Alternatively, your point of view might be “with a good scheduling interface, no one should have to wait in line.” This might lead to better ways for employees to staff registers and consumers to pick them. Or, you might have a totally different point of view: “let’s make grocery stores more like farmers’ markets, where payment is distributed across the stands that have the food.”\"]]],[1,\"h2\",[[0,[],0,\"Brainstorming Ideas\"]]],[1,\"p\",[[0,[],0,\"The biggest challenge in developing solutions that solves these problems is that we all have blinders that keep us from discovering the best solution. The greatest ideas are achieved by transcending the blinders and thinking outside the box.\"]]],[1,\"p\",[[0,[],0,\"There are two good examples of this. The first one is the classic problem of connecting all the dots in a three by three dot matrix by only drawing four lines.\"]]],[10,0],[1,\"p\",[[0,[],0,\"If you think inside the box, as most people do, you’ll never find the solution to this problem. But by thinking outside of the box, you discover that by extending lines outside of the grid you are able to achieve the goal.\"]]],[10,1],[1,\"p\",[[0,[],0,\"The second example is another classic riddle known as Duncker’s candle problem. Based on the items in this picture, (candle and a box of thumbtacks) how do you fix the candle to the wall without the wax dripping onto the table?\"]]],[10,2],[1,\"p\",[[0,[],0,\"There are a lot of creative answers to this riddle, but by thinking outside the box and thinking about the box as a tool that can help you achieve your goal, you realize that you can do this:\"]]],[10,3],[1,\"p\",[[0,[],0,\"In order to think outside of the box, we often have to brainstorm as many prototypes as possible in order to find the best ones. In this stage of the development process, developing a large quantity of prototypes rather than developing the quality of the prototype increases your chances of success down the line.\"]]],[1,\"p\",[[0,[],0,\"You’ll usually be able to think of the first couple solutions quickly and without much effort, but it is often the combination of multiple ideas that allows for the emergence of the best idea. Don’t stop after you think you’ve found a good solution, brainstorm solutions until you have absolutely exhausted your ability to come up with more.\"]]],[1,\"p\",[[0,[],0,\"If you find yourself unable to think of out of the box ideas, framing the problem in a different way or thinking about it from a different angle often helps. For instance, In the candle problem, when the problem is presented with the box being a separate object than simply a container for the thumbtacks, participants are able to come up with the solution more consistently.\"]]],[1,\"p\",[[0,[],0,\"As an experiment in an art class, the teacher divided her students into two groups. The first group was told that they would be evaluated on how many pieces of art they were able to produce, while the second group was told that they would be evaluated by the quality of the best piece of art they made.\"]]],[1,\"blockquote\",[[0,[],0,\"“While the quantity group was busily churning out piles of work- and learning from their mistakes- the quality group had sat theorizing about perfection, and in the end had little more to show for their efforts tan grandiose theories and a pile of dead clay”\"]]],[1,\"p\",[[0,[],0,\"Thus, the question when it comes to prototyping is how can we consistently and reliably get people outside the frame? What are the subtle differences in framing that make big differences?\"]]],[1,\"p\",[[0,[],0,\"One strategy for thinking outside the box, as illustrated in the art class example, is to encourage people to design and build in parallel rather than in serial. By producing a large number of prototypes, we are able to separate ego from artifact, as well as encouraging comparison and transfer. Designers are less likely to get attached to one specific approach that may blind them from seeing a better solution.\"]]],[1,\"p\",[[0,[],0,\"With the recent advent of web analytics, we have been able to more finely track the engagement and success of advertisements. When comparing ads done in parallel versus ads done in serial, developing and sharing multiple design leads to more individual exploration, more feature sharing, more conversational turns, better consensus, and an increase in group rapport.\"]]],[1,\"p\",[[0,[],0,\"Additionally, what the web analytics revealed was that ads that were designed with a parallel approach got more visitors and engagement than ads designed in serial. In fact, ads that were developed in parallel generated longer time on site, was more diverse, and was clicked on more frequently.\"]]],[1,\"h2\",[[0,[],0,\"Storyboarding\"]]],[1,\"p\",[[0,[],0,\"To begin developing prototypes to solve problems, it often helps to create storyboards. Storyboarding allows you to think about a problem from the perspective of the personas that you’ve created, enabling you to look outside of the box and think about and share the pain points that your users go through.\"]]],[1,\"p\",[[0,[],0,\"In essence, storyboarding is all about tasks. Like developing personas, it helps to have a story created from each demographic of users. By developing stories and envisioning how your solution would fit into the everyday tasks of your users, developing prototypes becomes much more clear. The holistic focus allows you to emphasize how a user interface accomplishes a task without committing to a specific user interface.\"]]],[1,\"p\",[[0,[],0,\"Much like a comic strip, storyboards also communicate flow. Good storyboards clearly show the flow between different steps of a task to help get all the stakeholders on the same page in terms of the goal.\"]]],[10,4],[1,\"p\",[[0,[],0,\"One of the common remarks people make about storyboards is that they are unskilled at drawing. However, storyboards aren’t about how well you can draw. Storyboards are about communicating the underlying ideas of what users go through to accomplish a task. In fact, bad drawings often allow you to focus solely on the ideas.\"]]],[1,\"p\",[[0,[],0,\"Ultimately, storyboards should convey:\"]]],[3,\"ul\",[[[0,[],0,\"Setting – Who are the people involved, what is the environment like, and what is the task being accomplished?\"]],[[0,[],0,\"Sequence – What steps are involved, what leads someone to use the app, and what task is being illustrated?\"]],[[0,[],0,\"Satisfaction – What motivates people to use this system, what does it enable people to accomplish, and what need does the system fill?\"]]]],[1,\"h2\",[[0,[],0,\"Paper Prototypes\"]]],[1,\"p\",[[0,[],0,\"The goal for building prototypes, as mentioned previously, is not about building the most aesthetically pleasing prototype, but building something that expresses the functionality and approach of your solution.\"]]],[1,\"p\",[[0,[],0,\"In terms of software applications, prototyping can be done without writing a single line of code. We can fake a product to make more prototypes in a short amount of time.\"]]],[1,\"p\",[[0,[],0,\"By prototyping your user interfaces with paper, you can easily show other people what your design could potentially look and feel like. Paper prototypes are also easily manipulated and changed, making it easy to receive feedback on your ideas.\"]]],[1,\"p\",[[0,[],0,\"When making paper prototypes, be creative and use different kinds of tools and resources to build your prototype. For example, you may use post it notes to simulate the effects of a popup window, or a menu that overlays on top of the interface. Another helpful hint is to use a photocopier to quickly duplicate different elements of your prototype.\"]]],[1,\"p\",[[0,[],0,\"Good paper prototyping is kind of like playing make believe as a kid. Using different sizes of paper, color, transparencies, index cards, and whatever else you can work with cheaply and quickly, you can convey almost any idea to other people.\"]]],[1,\"p\",[[0,[],0,\"The other advantage of paper prototypes is that they are easy to edit. Anyone with a pen can quickly make a change to how the prototype looks or how it works, making it easy to get other people’s ideas into the system and empowers them to play a more active role in the design process.\"]]],[1,\"h2\",[[0,[],0,\"Video Prototypes\"]]],[1,\"p\",[[0,[],0,\"Another approach to further showcasing a storyboard is to create video prototypes. Video prototypes allow for a cheap, quick, and powerful visualization of how an idea is supposed to work. By sharing a story through a video that captures how the product is supposed to work, stakeholders can better visualize and understand how a solution could work. A video prototype can change what the team argues about in a good way.\"]]],[1,\"p\",[[0,[],0,\"Like good storyboards, video prototypes share a story in a self-explanatory, portable way. Good video prototypes show a whole task, including motivation and success. A good way to do this is to show the pain points, frustrations, as well as the success of a person executing on a task.\"]]],[1,\"p\",[[0,[],0,\"When creating a video prototype of any fidelity, ensure that you focus on the message rather than the quality of the video. You don’t need a high quality video camera in order to capture a video prototype, any smartphone will do. Make sure you create a realistic scenario that people can understand. Try not to spend too much time editing your video prototype because editing can be extremely time consuming.\"]]],[1,\"h2\",[[0,[],0,\"The Wizard of Oz\"]]],[1,\"p\",[[0,[],0,\"If you’ve ever watched the Wizard of Oz, you’re likely to be familiar with the story of how the group (Dorothy, the Scarecrow, the Tin Man, and the Lion) traveled their long journey in hopes of meeting magical wizard. When they finally get to the castle, they discover that the giant wizard is nothing more than a small man controlling a large puppet.\"]]],[1,\"p\",[[0,[],0,\"In the same way when building prototypes, early prototypes can simply be a human operated mirage to simulate the interface to the users. This approach is much faster, cheaper, and more iterative while also being more real than paper prototypes.\"]]],[1,\"p\",[[0,[],0,\"One example can be seen in the way that a startup company named Aardvark demonstrated their concept to their users. Aardvark was an application that allowed a user to ask a question and be automatically paired up with one of their friends who was most qualified to answer the question. However, their prototype did not have the matching algorithm implemented yet, so they used a “wizard” to manually select who the question would be sent to.\"]]],[1,\"p\",[[0,[],0,\"If the users loved the wizard of oz prototype, they’ll love the real thing even more. However, there are a couple caveats to pay attention to when testing with a wizard of oz prototype. The higher fidelity the prototype is, the more users will think it is completed, and the less likely users will feel to offer critiques. On the contrary, lower fidelity prototypes will often generate more feedback, but may not capture the exact interaction you are looking for.\"]]],[1,\"p\",[[0,[],0,\"Additionally, to make a wizard of oz prototype, the “wizard” must understand the flow of the application in order to properly manipulate the application. Thus, the application flow must be carefully laid out and rehearsed in order to avoid errors in the demonstration, maximize consistency, and lower the response time necessary to perform the “wizard” tasks. Having a flowchart to follow the triggers the wizard receives can help reduce errors.\"]]],[1,\"p\",[[0,[],0,\"Another thing to be aware of when creating wizard of oz prototypes is accidently prototyping a technology that doesn’t exist yet. Pay careful attention to what your prototypes do to ensure that you will in fact be able to build it when the time comes. You don’t want to promise something you can’t deliver!\"]]]]}","comment_id":"5f782e892493c2c88d8d40d6","feature_image":"http://localhost:2369/content/images/2020/10/2015-01-31-03.32.46-1-1.jpg","featured":false,"status":"published","visibility":"public","created_at":"2020-10-03T07:55:53.000Z","updated_at":"2020-10-03T08:23:06.000Z","published_at":"2015-02-12T07:57:00.000Z","custom_excerpt":"These are my notes in essay form from the Intro to Human Computer Interaction course taught by Scott Klemmer at the University of California, San Diego.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"email_recipient_filter":"none","tags":[],"authors":[{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"}],"primary_author":{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"},"primary_tag":null,"url":"http://localhost:2369/intro-to-hci-lecture-2-prototyping/","excerpt":"These are my notes in essay form from the Intro to Human Computer Interaction course taught by Scott Klemmer at the University of California, San Diego.","send_email_when_published":false,"email":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null},{"id":"5f77f4e42493c2c88d8d40a7","uuid":"60d9bdcc-20c9-4699-a4c9-8d98d5e1354a","title":"Intro to HCI Lecture 1 – Needfinding","slug":"intro-to-hci-lecture-1-needfinding","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/le-journal-de-la-triennale-4-on_ne_reste_pas_au_meme_endroit-melaniebouteloup_v10_img_50.jpg\",\"alt\":\"le-journal-de-la-triennale-4-on_ne_reste_pas_au_meme_endroit-melaniebouteloup_v10_img_50\",\"title\":\"\",\"width\":1200,\"height\":789}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/whenuserhitsmachinexeroxstills.png\",\"alt\":\"whenuserhitsmachinexeroxstills\",\"title\":\"\",\"width\":321,\"height\":489}],[\"image\",{\"src\":\"http://localhost:2369/content/images/2020/10/persona-example1-700x525.jpg\",\"alt\":\"persona example\",\"title\":\"\",\"width\":700,\"height\":525}]],\"markups\":[[\"a\",[\"href\",\"http://d.ucsd.edu/srk/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"These are my notes in essay form from the Intro to Human Computer Interaction course taught by \"],[0,[0],1,\"Scott Klemmer\"],[0,[],0,\" at the University of California, San Diego. All credit for content goes to Scott, any errors are my own.\"]]],[1,\"p\",[[0,[],0,\"One starting point for designing new products and technology is to clearly identify an existing problem or need. This is because finding big problems often yields important untapped opportunities for design. By observing people, you build empathy and put yourself in their shoes.\"]]],[1,\"p\",[[0,[],0,\"One example is an electronics firm that makes devices for truckers. These devices were underused by Truckers, and when asked why, the responses were minimal. However, it wasn’t until designers went into the field that they found that the truckers’ big hands and large gloves made it difficult to use the tiny keys on these devices.\"]]],[1,\"p\",[[0,[],0,\"The designers took this information and created a redesign that provided common responses with one click as opposed to lots of typing. The new device featured a dynamic display with big buttons and a stylus for precision input when necessary.\"]]],[1,\"blockquote\",[[0,[],0,\"“You can observe a lot just by watching.” – Yogi Berra\"]]],[1,\"p\",[[0,[],0,\"Observing people is only one of the ways to begin designing an effective user interface. However, it’s often a good strategy to begin your design process by interacting with your users.\"]]],[1,\"p\",[[0,[],0,\"In 1914, Bronisław Malinowski travelled to Papua New Guinea to conduct fieldwork in the Trobriand Islands. While he was there, World War I broke out, leaving Malinoski with the choice of either hanging out in the Trobriand Islands or being interned. Needless to say, Malinoski decided to stay on the Trobriand Islands.\"]]],[1,\"p\",[[0,[],0,\"During his time on the islands, Malinowski developed the practices of participant observation which remain a hallmark of ethnographic research to this day.\"]]],[10,0],[1,\"p\",[[0,[],0,\"This idea of “Deep Hanging Out” as coined by Genevieve Bell is exactly what Malinowski did with the natives. Deep Hanging Out is spending time with people doing their work and living their lives. By doing this, you can get beneath the surface of what people say to learn about what they actually do.\"]]],[1,\"p\",[[0,[],0,\"If you’ve ever lived in another country, you’ve realized that every culture has traditions and rituals that may be unfamiliar and foreign to you. But you don’t have to go very far to recognize the beautiful complexity of culture.\"]]],[1,\"p\",[[0,[],0,\"For example, being a student requires an enormous amount of practical knowledge and constitutes a large number of practices that are enacted every day that students are rarely conscious of because it’s an everyday behaviour. But if someone were to be suddenly dropped into being a student with no knowledge of what student life was like, they’d have all sorts of trouble. Furthermore, many of the practices that are part of everyday behavior can be difficult to articulate.\"]]],[1,\"p\",[[0,[],0,\"Therefore, there are five key things to learn by observing participants:\"]]],[1,\"h3\",[[0,[],0,\"1 – What do people do now? What’s the baseline that we’re starting from?\"]]],[1,\"p\",[[0,[],0,\"Getting a full understanding of the culture, practices, and rituals of your target audience provides an understanding of your audience that is extremely helpful. Digging deep into the motivations, emotions, and aspirations of your audience allows you to better understand where to begin.\"]]],[1,\"h3\",[[0,[],0,\"2 – What values and goals do people have?\"]]],[1,\"p\",[[0,[],0,\"Most often, we’ll want to build technologies that align with what people care about and what they hope to accomplish. This doesn’t mean literally building what people have asked for because people often don’t know how to best achieve their goals, especially for disruptive technologies. Instead, this is about designing technologies that will weave themselves into the fabric of people’s everyday lives, even if they introduce new concepts and functionality.\"]]],[1,\"h3\",[[0,[],0,\"3 – How are these particular activities embedded in a larger ecology of behaviors?\"]]],[1,\"p\",[[0,[],0,\"For the individual bus or subway user, the bus or subway segment is a part of a larger activity like getting to a friend’s house commuting to work, or going to the grocery store. By understand the constraints and goals of the large activity, you may come up with ideas that you wouldn’t have if you were just thinking about the bus ride more narrowly.\"]]],[1,\"p\",[[0,[],0,\"By figuring out why someone would choose to take the bus or not take the bus, you as the designer might end up with something more broad, like creating a mobile application that helps people figure out when a bus is coming, or the best way to get from one destination to another.\"]]],[1,\"p\",[[0,[],0,\"Taking this broader view can help you be more effective as a designer by helping you design for the larger activity that people are engaged in.\"]]],[1,\"h3\",[[0,[],0,\"4 – What similarities and differences can be found across different people?\"]]],[1,\"p\",[[0,[],0,\"In our bus example, a low mobility user might care enormously about the accessibility of the bus, while somebody else may be concerned primarily with the cost, and yet another person may be concerned primarily with the efficiency in getting there.\"]]],[1,\"h3\",[[0,[],0,\"5 – What other contexts, like time of day, influence people’s behaviors?\"]]],[1,\"p\",[[0,[],0,\"Pay attention to any other things that may contribute to the way that people are behaving. This requires paying very close attention and observing the nuances of what people do.\"]]],[1,\"h2\",[[0,[],0,\"Observing the Experienced\"]]],[1,\"p\",[[0,[],0,\"Another good strategy for finding needs is to be an apprentice under someone who has experience with the area you are working on. For example, if you’re building a better supermarket checkout system, you could find needs by apprenticing as a clerk and learning the different workarounds that clerks do as a part of their job.\"]]],[1,\"p\",[[0,[],0,\"One illustration of the power of being in the presence of an expert comes from Jack Whalen and colleagues at Xerox PARC. While studying a call center for photocopier repair, they found that diagnosing photocopiers over the phone can be extremely difficult.\"]]],[1,\"p\",[[0,[],0,\"Unsurprisingly, after studying the support staff, they found that the most effective person was the person who had been working there the longest. To their surprise, however, the second most effective person wasn’t the person that had been working their the second longest, but the person who had been sitting next to the most effective person. Thus, by sitting next to an expert, these repair technicians were able to pick up all of the informal skills of doing repair work that aren’t written down in manuals anywhere, which were the skills that helped somebody really excel in their job.\"]]],[1,\"p\",[[0,[],0,\"If you see something that catches your eye while being an apprentice, be sure to interact and validate it with the people you’re working with so you can better understand why things are done the way that they are. Additionally, pay attention to all the artifacts that compose people’s work, because the ways that people have hacked their equipment to make their work more effective is an indication of ways to innovate.\"]]],[1,\"p\",[[0,[],0,\"For example, Post-It notes have traditionally been used as artifacts to help users more easily navigate different routines. Think about a fax machine or other piece of equipment that has Post-It notes reminding people how to use stuff.\"]]],[1,\"p\",[[0,[],0,\"A harmful attitude about designing, although less common nowadays, is the tendency to think people who can’t figure out how to use technology are simply incompetent. Using another example from Xerox PARC, Lucy Suchman recorded a video, that has now become legendary, of two people trying to produce a double sided copy of 50 pages of paper.\"]]],[10,1],[1,\"p\",[[0,[],0,\"According to legend, when Lucy shared the video with the executives, they wrote the users off as dumb. However, when it was revealed that the two users were Allen Newell and Ron Kaplan, two of Xerox’s premier research scientists, they were no longer able to say that it was because the users did not know how to use technology. Ultimately, this video shows that if you are unfamiliar with a particular piece of technology, it can be difficult to figure out how to use it without an intuitive user interface.\"]]],[1,\"h2\",[[0,[],0,\"Interviewing\"]]],[1,\"p\",[[0,[],0,\"When it comes to interviewing, one key distinction that must be made is the difference between what people say and what people do.\"]]],[1,\"p\",[[0,[],0,\"For example, Walmart conducted a study asking its customers whether they would like the aisles to be less cluttered. Unsurprisingly, the participants of the study responded affirmatively. Walmart then proceeded to declutter their aisles, remove inventory, and lost a billion dollars in sales.\"]]],[1,\"p\",[[0,[],0,\"What happened? In this situation, Walmart made two key mistakes. First, they listened to what people said rather than paying attention to what people did. Second, they asked a leading question. Those two mistakes led them to do exactly the opposite of what would be most effective.\"]]],[1,\"blockquote\",[[0,[],0,\"“If I asked people what they wanted, they would have said faster horses” – Henry Ford\"]]],[1,\"p\",[[0,[],0,\"The starting point of any good interview is picking a good interviewee. A good collection of interviews from people of different backgrounds allows for diverse perspectives that can better help you spot trends that are common among different perspectives. If you are trying to interview people for a product you are building, you may be able to glean good insights from people who are current users of a similar system as well as people who are non-users.\"]]],[1,\"p\",[[0,[],0,\"Good interviewees can be found through friends and family, as well as sites like Craigslist or even Twitter. (You may need to provide compensation as an incentive for people to take interviews)\"]]],[1,\"p\",[[0,[],0,\"However, you may not always be able to get an interview with the ideal person, so you may need to approximate. The key is to be open to any insights or thoughts that users or potential users may have.\"]]],[1,\"p\",[[0,[],0,\"One group of users, known as lead users, can be extremely helpful in the interview process as well as the development process. Lead users are the knowledgeable early adopters that can help provide valuable feedback that can directly help you build a better product.\"]]],[1,\"h2\",[[0,[],0,\"Asking Good Questions\"]]],[1,\"p\",[[0,[],0,\"What makes a good question when you’re interviewing? Take this example and decide whether this is a good question. The question is: “Is the daily update an important feature to you?” When asked a question like this, most users would say “Yes.” It’s kind of a leading question. Most people, when asked if something’s important, would say “Sure, why not?” What’s at stake? Why would you say no? If you wanted to learn about the daily update, participant observation might be a lot more effective because you could see whether people actually use the daily update. Or you might even use log files as a way of driving your questions. So, for example, you might ask somebody, “I see from the log that you’ve never used the daily update. Why is that? Tell me more.”\"]]],[1,\"p\",[[0,[],0,\"Other kinds of questions to avoid:\"]]],[3,\"ul\",[[[0,[],0,\"Questions that ask what users would do, like, or want in hypothetical situations – These questions often generate replies based on a person’s ideal, hypothetical world, not necessarily what they would actually do.\"]],[[0,[],0,\"Questions that ask how often users do things – Asking a user how often they go to the gym generates responses that reveal how often they’d like to go to the gym, not actually how often they do.\"]],[[0,[],0,\"Questions that ask how much they like things on an absolute scale – Asking a user how much they like something is often not extremely valuable or insightful.\"]],[[0,[],0,\"Binary questions – Questions that only have two answer choices, like questions that ask on an absolute scale do not provide any significant insights into how you should build your product.\"]],[[0,[],0,\"Good questions are questions that are open-ended, have a specific goal, and are unbiased. For example, instead of asking how often a person goes to the gym, you should ask them to tell you about the most recent time that they went to the gym.\"]],[[0,[],0,\"Having a specific goal with each question allows you to uncover specific things with each question. If a question leaves your interviewee stumped for a little bit, that is a good thing. A little bit of silence is golden.\"]]]],[1,\"p\",[[0,[],0,\"One common problem for people who are new to interviews is that they often say that there’s nothing to be found for the problem they’re tackling because it’s either impossible or obvious. However, it’s rarely the case that there is nothing new. Malcolm Gladwell has a wonderful explanation in the introduction to his new book of collective stories “What the Dog Saw”.\"]]],[1,\"blockquote\",[[0,[],0,\"“The trick to finding ideas is to convince yourself that everyone and everything has a story to tell. I say trick, but what I really mean is challenge, because it’s a very hard thing to do. Shampoo doesn’t seem interesting? Well, dammit, it must be, and if it isn’t, I have to believe that it will ultimately lead me [to something] that is.” – Malcolm Gladwell\"]]],[1,\"p\",[[0,[],0,\"If an interviewee’s answer doesn’t quite answer what you were trying to get out of the question, follow up with other questions that clarify what you’re trying to get at. Paying attention to how your questions are answered also allows you to better understand how to ask good questions that generate the answers you’re looking for.\"]]],[1,\"p\",[[0,[],0,\"Examples of good questions:\"]]],[3,\"ul\",[[[0,[],0,\"When was the last time you used a specific application?\"]],[[0,[],0,\"What were the first things you did when you woke up this morning?\"]],[[0,[],0,\"What are three words you would use to describe your experience with a specific task?\"]],[[0,[],0,\"What did you do after a certain circumstance / situation happened?\"]]]],[1,\"h2\",[[0,[],0,\"Other Interviewing Considerations\"]]],[1,\"p\",[[0,[],0,\"Another consideration to keep in mind is the location of the interview. Interviews should take place in as realistic of a location as possible. For example, interviewing grocery shoppers is best done in grocery stores because it allows the interviewee to answer based on physical triggers that cause different behaviors that might not be mentioned otherwise. Conducting interviews in realistic location also allows you as the interviewer to better understand what your interviewee is talking about.\"]]],[1,\"p\",[[0,[],0,\"A common question about interviewing is whether or not it should be recorded. Recording audio or video has benefits as well as drawbacks that should be considered. The drawbacks of recordings are that they can be time consuming to review and edit, requires permission, but most importantly can change a participant’s response. However, recordings provide a robust record and can help you focus on interviewing so you don’t have to do that while taking notes.\"]]],[1,\"p\",[[0,[],0,\"A good compromise is taking photos. Photos are quick and easy to take, provide a visual record, but does so without changing a participant’s response.\"]]],[1,\"h2\",[[0,[],0,\"Beyond Interviewing\"]]],[1,\"p\",[[0,[],0,\"Although interviewing is a great way to do user research, interviewing also has it’s limits. Interviews only provide a snapshot of what a user’s experience is like, and is often limited by what the user tells you.\"]]],[1,\"p\",[[0,[],0,\"One solution to this problem is doing a diary study. Essentially, a diary study prompts users to record their thoughts or feelings based on some trigger. This could be asking the user to take a picture every time they eat a meal, write down how they feel every time they watch a television show, or something along these lines. This allows you to sample users’ experience at given points throughout their day.\"]]],[1,\"h2\",[[0,[],0,\"Personas\"]]],[1,\"p\",[[0,[],0,\"The final step, after conducting as many user interviews as you possibly can, is to develop personas. Personas are fictional characters that you use to represent the demographics of your users. For example, if you are developing a messaging application, your personas can include teenage males who are using your messaging app to keep up with his classmates as well as middle-aged mothers who are using the app to message their kids.\"]]],[10,2],[1,\"p\",[[0,[],0,\"The value in having personas is being able to quickly pinpoint different use cases among different demographics of people. By assigning a concrete name to a certain demographic, it becomes easier to keep that specific demographic in mind. Personas should be as detailed as possible, and be a compilation that most accurately represents different groups of your users.\"]]],[1,\"p\",[[0,[],0,\"Beyond just demographic information, however, a persona should also capture a person’s motivations, beliefs, intentions, behavior, and goals. In other words, give your persona a story to tell. It also helps to put a face to the persona, so that you can easily visualize the person that you are developing for. Having this information makes the next step, prototyping, much easier.\"]]]]}","comment_id":"5f77f4e42493c2c88d8d40a7","feature_image":"http://localhost:2369/content/images/2020/10/2015-01-31-03.32.46-1.jpg","featured":false,"status":"published","visibility":"public","created_at":"2020-10-03T03:49:56.000Z","updated_at":"2020-10-03T04:18:29.000Z","published_at":"2015-02-01T03:51:00.000Z","custom_excerpt":"These are my notes in essay form from the Intro to Human Computer Interaction course taught by Scott Klemmer at the University of California, San Diego.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"email_recipient_filter":"none","tags":[{"id":"5f33f5d7f4c9bc65cca4be6c","name":"Works","slug":"works","description":null,"feature_image":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2020-08-12T13:59:51.000Z","updated_at":"2020-08-12T13:59:51.000Z","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2369/tag/works/"}],"authors":[{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"}],"primary_author":{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"},"primary_tag":{"id":"5f33f5d7f4c9bc65cca4be6c","name":"Works","slug":"works","description":null,"feature_image":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2020-08-12T13:59:51.000Z","updated_at":"2020-08-12T13:59:51.000Z","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2369/tag/works/"},"url":"http://localhost:2369/intro-to-hci-lecture-1-needfinding/","excerpt":"These are my notes in essay form from the Intro to Human Computer Interaction course taught by Scott Klemmer at the University of California, San Diego.","send_email_when_published":false,"email":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null},{"id":"5f782d082493c2c88d8d40c3","uuid":"2c9f5026-05e5-4a03-9693-c0797eb4ff39","title":"On Ambiverts: Why Distinguishing Between Extroverts and Introverts is Inadequate","slug":"on-ambiverts-why-distinguishing-between-extroverts-and-introverts-is-inadequate","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[[\"a\",[\"href\",\"http://en.wikipedia.org/wiki/Myers-Briggs_Type_Indicator\"]],[\"strong\"]],\"sections\":[[1,\"p\",[[0,[],0,\"I’ve always hated the distinction between introverts and extroverts because I never could identify with either side. The accepted school of thought is that a person is either one or the other, without any middle ground.\"]]],[1,\"p\",[[0,[],0,\"According to \"],[0,[0],1,\"Myers Briggs\"],[0,[],0,\", perhaps the most widely popular and accepted personality test, extroverts are action oriented, seek breadth of knowledge and influence, prefer frequent interaction, and get energy from spending time with people while introverts are thought oriented, seek depth of knowledge and influence, prefer more substantial interaction, and get their energy from spending time alone.\"]]],[1,\"blockquote\",[[0,[],0,\"However, contrary to the binary choices provided by Myers Briggs, I’ve realized that extroversion/introversion is a spectrum, like a person’s height.\"]]],[1,\"p\",[[0,[],0,\"All of my life, I’ve had people (family, close friends, teachers, counselors) tell me different things. Some would say I was an introvert, and others would say that I was an extrovert. To different people I seemed to be different things.\"]]],[1,\"p\",[[0,[],0,\"After browsing the web and looking at a few more resources and doing some reflection, I came across a term called the ambivert, and finally felt understood by a personality test. I am very much an ambivert. There seems to be very little written about ambiverts, (Evernote isn’t even recognizing it as a word) so here are my thoughts.\"]]],[1,\"p\",[[0,[1,1],2,\"Ambiverts sit on the spectrum of social interaction right in between the introverts and extroverts.\"],[0,[],0,\" Ambiverts love spending time with people, but get tired after spending too much time around people. Ambiverts are also very capable of doing things alone, but spending an entire day alone can suck them into a depressed, unproductive mood.\"]]],[1,\"p\",[[0,[1,1],2,\"Ambiverts love interacting with people, but in a very purposeful way.\"],[0,[],0,\" Ambiverts can have extremely animated and interactive conversations, or mellow and meditative ones. Ambiverts will defend both their personal time as well as their social time.\"]]],[1,\"p\",[[0,[1,1],2,\"Ambiverts process information best when they process internally and externally.\"],[0,[],0,\" Ambiverts need time and space to process things on their own, but they also need people who they can trust to process things with externally. In order for ambiverts to fully process information, they usually need both.\"]]],[1,\"p\",[[0,[1,1],2,\"Ambiverts seek breadth of knowledge and influence, but dive deep when they are truly passionate.\"],[0,[],0,\" Ambiverts can be thought or action oriented, depending on the situation, but they are also oftentimes both.\"]]],[1,\"p\",[[0,[],0,\"The challenge for ambiverts is finding one thing to stick with. Because ambiverts do well socially and individually, it’s easy for an ambivert to become the jack of all trades, having knowledge in many different areas but not necessarily an expert an any of them.\"]]],[1,\"p\",[[0,[],0,\"Ambiverts tend to do well adapting to any situation that they are placed in, whether it be a loud social scene or a secluded environment.\"]]],[1,\"p\",[[0,[],0,\"However, no matter if you identify as an extrovert, introvert, or ambivert, don’t let a personality test define how you think about yourself. Figuring out how you work best for yourself is much more helpful than any test.\"]]],[1,\"p\",[[0,[],0,\"What do you think? Where would you put yourself on the spectrum?\"]]]]}","comment_id":"5f782d082493c2c88d8d40c3","feature_image":"http://localhost:2369/content/images/2020/10/origin_4724793799.jpg","featured":false,"status":"published","visibility":"public","created_at":"2020-10-03T07:49:28.000Z","updated_at":"2020-10-03T07:51:36.000Z","published_at":"2013-06-08T07:50:00.000Z","custom_excerpt":"I’ve always hated the distinction between introverts and extroverts because I never could identify with either side. ","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"email_recipient_filter":"none","tags":[],"authors":[{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"}],"primary_author":{"id":"1","name":"Daniel Kao","slug":"daniel","email":"dkao@diplateevo.com","profile_image":"//www.gravatar.com/avatar/93e1328b59023ca4779808c6df2538f8?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","meta_title":null,"meta_description":null,"tour":"[\"getting-started\"]","last_seen":"2021-01-03T15:21:08.000Z","created_at":"2020-06-27T14:19:54.000Z","updated_at":"2021-01-03T15:21:08.000Z","roles":[{"id":"5ef75589efaa0112adeb5a19","name":"Owner","description":"Blog Owner","created_at":"2020-06-27T14:19:53.000Z","updated_at":"2020-06-27T14:19:53.000Z"}],"url":"http://localhost:2369/author/daniel/"},"primary_tag":null,"url":"http://localhost:2369/on-ambiverts-why-distinguishing-between-extroverts-and-introverts-is-inadequate/","excerpt":"I’ve always hated the distinction between introverts and extroverts because I never could identify with either side. ","send_email_when_published":false,"email":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null}],"meta":{"pagination":{"page":3,"limit":5,"pages":4,"total":16,"next":4,"prev":2}}}